{"version":3,"sources":["data/index.js","logic/index.js","components/UserCard/index.js","components/Loading/index.js","components/UserList/index.js","components/Search/index.js","components/NabBar/index.js","components/Landing/index.js","components/Detail/index.js","App.js","serviceWorker.js","index.js","assets/img/logo.png"],"names":["validator","require","axios","dataAPI","__urlAPI__","retrieveAllUsers","isURL","this","a","get","Brastlewark","data","logic","brastlewark","filterUser","query","users","filter","user","name","toUpperCase","includes","userByName","userName","find","userById","userId","id","userByProfession","profession","professions","proff","UserCard","onDetail","className","style","backgroundColor","hair_color","trim","toLowerCase","onClick","backgroundImage","thumbnail","age","weight","height","Loading","isLoading","withRouter","filteredList","length","map","key","search","type","autoComplete","onChange","event","preventDefault","target","value","required","for","class","history","push","src","logo","match","location","userList","useState","setUser","useEffect","params","userFromDetail","pathname","friends","friend","handleGoToFriend","setUserList","setFilteredList","handleDetail","allUsers","getAllUsers","path","exact","render","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b12a72cf.chunk.js","sourcesContent":["\r\nconst validator = require('validator')\r\nconst axios = require('axios')\r\n\r\n\r\nconst  dataAPI =  {\r\n  __urlAPI__: 'https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json',\r\n\r\n  \r\n  retrieveAllUsers(){\r\n    validator.isURL(`${this.__urlAPI__}`)\r\n    \r\n    return ( async ()=> {\r\n        const { data : { Brastlewark }} = await axios.get(`${this.__urlAPI__}`)\r\n        return Brastlewark\r\n    })()\r\n\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport default dataAPI","import dataAPI  from '../data'\r\n\r\nconst logic = {\r\n\r\n  retrieveAllUsers(){\r\n    return ( async ()=>{\r\n      const brastlewark = await dataAPI.retrieveAllUsers()\r\n      return brastlewark\r\n    })()\r\n  },\r\n\r\n  filterUser(query, users){\r\n      const brastlewark = users.filter(user => {\r\n        const { name } = user \r\n        return name.toUpperCase().includes(query.toUpperCase())\r\n      })\r\n\r\n      return brastlewark\r\n  },\r\n\r\n  userByName(userName, users){\r\n      const user = users.find(user => {\r\n        return user.name == userName\r\n      })\r\n\r\n      return user\r\n  },\r\n\r\n  userById(userId, users){\r\n      const user = users.find(user => {\r\n        return user.id == userId\r\n      })\r\n\r\n      return user\r\n  },\r\n\r\n  userByProfession(profession, users){\r\n    const usersProfessionList = users.filter( user => {user.professions.find( proff => proff ===profession)})\r\n    return usersProfessionList\r\n  }\r\n\r\n}\r\n\r\nexport default logic","import React , { useState, useEffect } from 'react'\r\nimport logic from '../../logic/index'\r\nimport './index.sass'\r\n\r\n\r\nfunction UserCard({user, onDetail}){\r\n\r\n  return(\r\n    <> \r\n      <article className=\"user_card\" style={\r\n        {backgroundColor: `${user.hair_color.trim().toLowerCase()}`}} >\r\n        <header onClick={() => onDetail(user.id)}>\r\n          <section className=\"wrap\">\r\n            <div className='user-img' style={{backgroundImage: `url(${user.thumbnail})`}}></div>\r\n          </section>\r\n          <section className=\"user-name wrap\">\r\n            <p>{user.name}</p>\r\n          </section>\r\n        </header>\r\n        <section>\r\n          <ul className=\"user_info\">\r\n            <li>Age: &nbsp;{`${user.age}`}</li>\r\n            <li>Weight: &nbsp;{user.weight}</li>\r\n            <li>Height: &nbsp; {user.height}</li>\r\n            <li>Hair color: &nbsp; {user.hair_color}</li>\r\n          </ul>\r\n        </section>\r\n\r\n      </article>\r\n\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default UserCard","import React from 'react'\r\nimport './index.sass'\r\n\r\nfunction Loading({isLoading}){\r\n\r\nreturn(\r\n  <> \r\n    { isLoading && <div className=\"lds-css ng-scope\"><div className=\"lds-cube\"><div></div><div></div><div></div><div></div></div></div> }\r\n  </>\r\n)\r\n\r\n}\r\n\r\nexport default Loading","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport logic from \"../../logic/index\";\r\nimport UserCart from \"../UserCard/index\";\r\nimport Loading from \"../Loading/index\";\r\nimport \"./index.sass\";\r\n\r\nfunction UserList({ filteredList, onDetail }) {\r\n  return (\r\n    <>\r\n      <section className='user_list'>\r\n        {filteredList ? \r\n          (filteredList.length ? \r\n            filteredList.map(user => {\r\n              return <UserCart key={user.id} user={user} onDetail={onDetail}/>;\r\n            })\r\n          : \r\n          <span className=\"no_results\">No results</span>)\r\n        :\r\n        <Loading isLoading={!filteredList} />}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(UserList);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./index.sass\";\r\n\r\nimport logic from \"../../logic\";\r\n\r\nfunction Search({ search }) {\r\n\r\n  function handleSearch(event) {\r\n    event.preventDefault();\r\n    const {target: { value: query }} = event\r\n    search(query)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='form'>\r\n        <input type='text' name='name' autoComplete='off' onChange={handleSearch} required />\r\n        <label for='name' class='label-name'>\r\n          <span className='content-name'>Search</span>\r\n        </label>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Search);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\"\r\nimport logo from \"../../assets/img/logo.png\";\r\nimport Search from '../Search'\r\nimport \"./index.sass\";\r\nimport logic from \"../../logic/index\";\r\n\r\nfunction NavBar({history, search}) {\r\n\r\n  \r\n  return (\r\n    <>\r\n      <header>\r\n        <ul className='navbar'>\r\n          <li className='logo'>\r\n            <a className='navbar-item' onClick={() => history.push(\"/\")}>\r\n              <img className='logo' src={logo} />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a className='navbar-item all_players navbar-item--clicked' onClick={() => history.push(\"/userList\")}>\r\n              All Players\r\n            </a>\r\n            </li>\r\n          <li>\r\n            <div className=\"navbar-item\" onClick={() => history.push(\"/userList\")}>\r\n              <Search search={search}/>\r\n            </div>\r\n          </li>\r\n          <li></li>\r\n        </ul>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(NavBar)\r\n","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport './index.sass'\r\n\r\nfunction Landing(){\r\n\r\n    return(\r\n      <> \r\n        <section className=\"landing_presentation\">\r\n          <article>\r\n            <header>\r\n              This\tis\tone\tof\tthese\ttimes,\tour\theroes\tjust\tarrived\tat\ta\tGnome\ttown\tcalled\t\r\n              Brastlewark.\tTo\tfacilitate\ttrade\twith\tthe\tlocal\tpopulation\tthey\tneed\tan\teasy\tway\tto\t\r\n              browse\tall\tthe\tinhabitants\tdetails.\tWe've\tfound\ta\tserver\tproviding\tall\tthe\tcensus\tdata\t\r\n              of\tBrastlewark\tat\tthe\tfollowing\taddress:\r\n              https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json\r\n            </header>\r\n            <section>\r\n              Gnomes\tin\tthis\ttown\tare\tnot\treally\tsocial\tbecause\tthey\thave\ttoo\tmuch\twork\tto\tdo.\t\r\n              That's\tthe\treason\tthey\tcan\thave\tmore\tthan\tone\tjob\tand\tmight\thave\tfew\tor\teven\tno\t\r\n              friends\tat\tall.\tThey\talso\tappreciate\ttheir\tprivacy\tso\tthey've\tused\tsome\trandom\t\r\n              images\tfrom\tinternet,\tnot\tspecifically\toptimized\tfor\tmobile\tdevices,\tfor\ttheir\tprofile.\t\r\n              (They\tare\tvery\tmodern\tin\tsome\taspects\tand\tthey\thave\tsmartphones\tand\taccess\tto\t\r\n              internet\tfor\tinstance).\r\n              Please\twrite\tan\tapplication\tusing\tReact\tand\ttypes\r\n            </section>\r\n            <section>\r\n                <div>\r\n                  Specifications:\r\n                  <ul>\r\n                    <li>Retrieve\tdata\tfrom\tthe\tURL\tprovided</li>\r\n                    <li>Show\tthis\tdata\tin\tthe\tmost\tuser-friendly\tway\tyou\tcould\tthink.\tKeep\tin\tmind\tour\t\r\n                    heroes\twill\tbe\tquite\tbusy\tdealing\twith\tOrcs,\tso\t  apps\thave\tto\tbe\treally\tsimple\tand\t\r\n                    easy\tto\tuse.\tAt\tleast\twould\tbe\tgood\tto\tquickly\t  browse\t(and\teven\tfilter)\tall\tthe\t\r\n                    individuals\tand\tbe\table\tto\tsee\tthe\tdetails\tof\teach\t  one.\r\n                  </li>\r\n                    <li>\r\n                      Document\tall\tlibraries\tused\tand\texplain\tthe\treason\tyou’ve\tused\tthat\tlibrary\r\n                    </li>\r\n                    <li>\r\n                    Test\tthe\tapp:\tadd\tthe\tmost\timportant\ttest\tyou\tthink\tit\tis\tneeded.\r\n                    </li>\r\n                  </ul>\r\n\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                  Bonus:\r\n                  <ul>\r\n                    <li>Be\tcreative!</li>\r\n                    <li>\r\n                    UI\tmust\tnot\tblocked\tby\tnetwork\tconnections\tor\tlong\toperations\r\n                    </li>\r\n                    <li>\r\n                      Images\tcoming\tfrom\tnetwork\tcached\tto\timprove\tperformance\r\n                    </li>\r\n                    <li>\r\n                    Error\thandling\r\n                    </li>\r\n                    <li>\r\n                    Avoid\tusing\tthird\tparty\tlibraries\tfor\tbasic\tfunctionality\t(we\twant\tto\tsee\tyou\tknow\t\r\n                    the\tbasics!)\r\n                    </li>\r\n                    <li>\r\n                    Use\tthird\tparty\tlibraries\tfor\textended\tfunctionality\r\n                    </li>\r\n                    <li>\r\n                    Snappiness\t&\tresponsiveness\tover\tsluggishness\t&\tidleness\r\n                    </li>\r\n                    <li>\r\n                    Determine\tgender\tof\tgnomes\t(just\tjoking\ton\tthis\tone\tbut\tfeel\tfree\tto\tmake\tyour\t\r\n                  guess)\r\n                    </li>\r\n                    <li>\r\n                    Test\tthe\tapp\r\n                    </li>\r\n\r\n                  </ul>\r\n                  <br/>\r\n\r\n                </div>\r\n            </section>\r\n          </article>\r\n        </section>\r\n      </>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Landing)\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport logic from \"../../logic/index\";\r\nimport \"./index.sass\";\r\n\r\nfunction Detail({ history, match, location, userList }) {\r\n  const [user, setUser] = useState();\r\n  useEffect(() => {\r\n    if (userList) {\r\n      const { params: { id } } = match;\r\n      const userFromDetail = logic.userById(id, userList);\r\n\r\n      setUser(userFromDetail);\r\n    }\r\n  }, [userList, location.pathname]);\r\n\r\n  function handleGoToFriend(name) {\r\n    const user = logic.userByName(name, userList);\r\n    history.push(`/detail/${user.id}`);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <section className='container'>\r\n        {user && (\r\n          <article\r\n            className='user-detail'\r\n            style={{ backgroundColor: `${user.hair_color.trim().toLowerCase()}` }}>\r\n            <header>\r\n              <section>\r\n                <div\r\n                  className='user-img'\r\n                  style={{ backgroundImage: `url(${user.thumbnail})` }}></div>\r\n              </section>\r\n              <section className='user-nick'>\r\n                <p>{user.name}</p>\r\n              </section>\r\n            </header>\r\n\r\n              <section className=\"user_data\">\r\n                <div className='user_basic_data'>\r\n                    <p>Age: &nbsp;{`${user.age}`}</p>\r\n                    <p>Weight: &nbsp;{user.weight}</p>\r\n                    <p>Height: &nbsp; {user.height}</p>\r\n                    <p>Hair color: &nbsp; {user.hair_color}</p>\r\n                </div>\r\n              </section>\r\n              <section className='social_info'>\r\n              <section>\r\n                <label>Professions</label>\r\n                <ul className='user_properties'>\r\n                  {user.professions.map(profession => {\r\n                    return <li>{profession}</li>;\r\n                  })}\r\n                </ul>\r\n              </section>\r\n              <section>\r\n                <label>Friends</label>\r\n                <ul className='user_properties user_friends'>\r\n                  {user.friends.map(friend => {\r\n                    return <li onClick={() => handleGoToFriend(friend)}>{friend}</li>;\r\n                  })}\r\n                </ul>\r\n              </section>\r\n            </section>\r\n          </article>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Detail);\r\n","import React, { useEffect, useState } from 'react'\nimport { Switch, Route } from \"react-router-dom\"\nimport {  withRouter } from \"react-router-dom\"\nimport './index.sass'\nimport UserList from './components/UserList'\nimport NavBar from './components/NabBar'\nimport Landing from './components/Landing/index'\nimport Detail from './components/Detail'\nimport logic from './logic'\n\n\nfunction App({history}) {\n  const [userList, setUserList] = useState()\n  const [filteredList, setFilteredList] = useState()\n\n  useEffect( () => {\n    async function getAllUsers(){\n      \n      const allUsers = await logic.retrieveAllUsers()\n      setUserList(allUsers)\n      setFilteredList(allUsers)\n    }\n    getAllUsers()\n  }, [])\n\n  function handleSearch(query){\n      const users = logic.filterUser(query, userList)\n      setFilteredList(users)\n  }\n\n  function handleDetail(id){\n    history.push(`/detail/${id}`)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <div>\n          <NavBar search={handleSearch}/>\n          <Route  path='/' exact render= { ()=> <Landing/> }/> \n          <Route  path=\"/userList\" render= { ()=> <UserList filteredList={filteredList} onDetail={handleDetail}/> }/> \n          <Route  path=\"/detail/:id\" render= { ()=> <Detail userList={userList} /> }/> \n        </div>\n      </Switch>\n    </div>\n  );\n}\n\nexport default withRouter(App) \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.9a2ea1c5.png\";"],"sourceRoot":""}